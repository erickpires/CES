"7115b097936310d863c3c2cceff4774a5614d835"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#3=[nil nil ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 297) (undo-tree-id148 . -5) (undo-tree-id149 . -5) (undo-tree-id150 . -1) (undo-tree-id151 . -1) 302) nil (23314 9158 337318 344000) 0 nil]) ((#("Serial.begin(9600);" 0 1 (fontified t face font-lock-keyword-face) 1 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t)) . 302) (undo-tree-id152 . -19) (undo-tree-id153 . -19) (t 23314 9145 619274 329000)) nil (23314 9158 337334 659000) 0 nil]) ((320 . 321)) nil (23314 9145 550104 904000) 0 nil]) ((315 . 319)) nil (23314 9145 550109 838000) 0 nil]) ((314 . 316) (#("(" 0 1 (fontified nil)) . -314) (314 . 315)) nil (23314 9145 550112 938000) 0 nil]) ((302 . 314)) nil (23314 9145 550115 423000) 0 nil]) ((297 . 302) (t 23314 9129 742410 847000)) nil (23314 9145 550117 754000) 0 nil] [nil nil ((45 . 492) (#("#include \"serial.h\"
#include \"serial.c\"

typedef char int8;
typedef byte uint8;
typedef short int16;
typedef unsigned short uint16;
typedef long int32;
typedef unsigned long uint32;

void setup() {
    serial_default_mode();
    serial_set_speed(9600);
}


void read_16_bytes(int8* to) {
    for(int i = 0; i < 16; i++) {
        to[i] = serial_read_byte_blocking();
    }
}

void loop() {
    char buffer[16];
    read_16_bytes(buffer);

    serial_write_n_bytes((uint8*)" 0 1 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face category c-cpp-delimiter) 1 2 (fontified t c-in-sws t face font-lock-preprocessor-face) 2 3 (fontified t c-in-sws t face font-lock-preprocessor-face) 3 4 (fontified t c-in-sws t face font-lock-preprocessor-face) 4 5 (fontified t c-in-sws t face font-lock-preprocessor-face) 5 6 (fontified t c-in-sws t face font-lock-preprocessor-face) 6 7 (fontified t c-in-sws t face font-lock-preprocessor-face) 7 8 (fontified t c-in-sws t face font-lock-preprocessor-face) 8 9 (fontified t c-in-sws t) 9 10 (fontified t c-in-sws t face font-lock-string-face) 10 11 (fontified t c-in-sws t face font-lock-string-face) 11 12 (fontified t c-in-sws t face font-lock-string-face) 12 13 (fontified t c-in-sws t face font-lock-string-face) 13 14 (fontified t c-in-sws t face font-lock-string-face) 14 15 (fontified t c-in-sws t face font-lock-string-face) 15 16 (fontified t c-in-sws t face font-lock-string-face) 16 17 (fontified t c-in-sws t face font-lock-string-face) 17 18 (fontified t c-in-sws t face font-lock-string-face) 18 19 (fontified t c-in-sws t face font-lock-string-face) 19 20 (fontified t c-in-sws t category c-cpp-delimiter) 20 21 (fontified t c-is-sws t c-in-sws t face font-lock-preprocessor-face category c-cpp-delimiter) 21 22 (fontified t c-in-sws t face font-lock-preprocessor-face) 22 23 (fontified t c-in-sws t face font-lock-preprocessor-face) 23 24 (fontified t c-in-sws t face font-lock-preprocessor-face) 24 25 (fontified t c-in-sws t face font-lock-preprocessor-face) 25 26 (fontified t c-in-sws t face font-lock-preprocessor-face) 26 27 (fontified t c-in-sws t face font-lock-preprocessor-face) 27 28 (fontified t c-in-sws t face font-lock-preprocessor-face) 28 29 (fontified t c-in-sws t) 29 30 (fontified t c-in-sws t face font-lock-string-face) 30 31 (fontified t c-in-sws t face font-lock-string-face) 31 32 (fontified t c-in-sws t face font-lock-string-face) 32 33 (fontified t c-in-sws t face font-lock-string-face) 33 34 (fontified t c-in-sws t face font-lock-string-face) 34 35 (fontified t c-in-sws t face font-lock-string-face) 35 36 (fontified t c-in-sws t face font-lock-string-face) 36 37 (fontified t c-in-sws t face font-lock-string-face) 37 38 (fontified t c-in-sws t face font-lock-string-face) 38 39 (fontified t c-in-sws t face font-lock-string-face) 39 40 (fontified t c-in-sws t category c-cpp-delimiter) 40 41 (fontified t c-is-sws t c-in-sws t) 41 42 (c-is-sws t fontified t face font-lock-keyword-face) 42 48 (fontified t face font-lock-keyword-face) 48 49 (fontified t) 49 52 (fontified t face font-lock-type-face) 52 53 (fontified t c-type c-decl-type-start face font-lock-type-face) 53 54 (fontified t) 54 58 (fontified t face font-lock-type-face) 58 60 (fontified t) 60 67 (fontified t face font-lock-keyword-face) 67 68 (fontified t) 68 71 (fontified t face font-lock-type-face) 71 72 (fontified t c-type c-decl-type-start face font-lock-type-face) 72 73 (fontified t) 73 78 (fontified t face font-lock-type-face) 78 80 (fontified t) 80 87 (fontified t face font-lock-keyword-face) 87 88 (fontified t) 88 92 (fontified t face font-lock-type-face) 92 93 (fontified t c-type c-decl-type-start face font-lock-type-face) 93 94 (fontified t) 94 99 (fontified t face font-lock-type-face) 99 101 (fontified t) 101 108 (fontified t face font-lock-keyword-face) 108 109 (fontified t) 109 117 (fontified t face font-lock-type-face) 117 118 (fontified t) 118 122 (fontified t face font-lock-type-face) 122 123 (fontified t c-type c-decl-type-start face font-lock-type-face) 123 124 (fontified t) 124 130 (fontified t face font-lock-type-face) 130 132 (fontified t) 132 139 (fontified t face font-lock-keyword-face) 139 140 (fontified t) 140 143 (fontified t face font-lock-type-face) 143 144 (fontified t c-type c-decl-type-start face font-lock-type-face) 144 145 (fontified t) 145 150 (fontified t face font-lock-type-face) 150 152 (fontified t) 152 159 (fontified t face font-lock-keyword-face) 159 160 (fontified t) 160 168 (fontified t face font-lock-type-face) 168 169 (fontified t) 169 172 (fontified t face font-lock-type-face) 172 173 (fontified t c-type c-decl-type-start face font-lock-type-face) 173 174 (fontified t) 174 180 (fontified t face font-lock-type-face) 180 183 (fontified t) 183 186 (fontified t face font-lock-type-face) 186 187 (fontified t c-type c-decl-id-start face font-lock-type-face) 187 188 (fontified t) 188 193 (fontified t face font-lock-function-name-face) 193 198 (fontified t) 198 202 (fontified t) 202 209 (fontified t) 209 210 (fontified t) 210 211 (fontified t) 211 212 (fontified t) 212 213 (fontified t) 213 214 (fontified t) 214 215 (fontified t) 215 216 (fontified t) 216 217 (fontified t) 217 221 (fontified t) 221 222 (fontified t) 222 223 (fontified t) 223 224 (fontified t) 224 225 (fontified t) 225 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 236 (fontified t) 236 237 (fontified t) 237 238 (fontified t) 238 239 (fontified t) 239 240 (fontified t) 240 241 (fontified t) 241 242 (fontified t) 242 243 (fontified t) 243 244 (fontified t) 244 245 (fontified t) 245 246 (fontified t) 246 247 (fontified t) 247 248 (fontified t) 248 249 (fontified t) 249 250 (fontified t) 250 251 (fontified t) 251 252 (fontified t) 252 253 (fontified t) 253 257 (fontified t) 257 260 (fontified t face font-lock-type-face) 260 261 (fontified t c-type c-decl-id-start face font-lock-type-face) 261 262 (fontified t) 262 275 (fontified t face font-lock-function-name-face) 275 276 (fontified t c-type c-decl-arg-start) 276 280 (fontified t face font-lock-type-face) 280 281 (composition (8 1 #1=[9 57711]) fontified t) 281 282 (fontified t) 282 284 (fontified t face font-lock-variable-name-face) 284 292 (fontified t) 292 295 (fontified t face font-lock-keyword-face) 295 296 (fontified t) 296 298 (fontified t face font-lock-type-face) 298 299 (fontified t c-type c-decl-id-start face font-lock-type-face) 299 300 (fontified t) 300 301 (fontified t face font-lock-variable-name-face) 301 316 (fontified t) 316 318 (composition (9 2 #2=[9 57656]) fontified t) 318 322 (fontified t) 322 330 (fontified t) 330 338 (fontified t) 338 339 (fontified t) 339 340 (fontified t) 340 341 (fontified t) 341 342 (fontified t) 342 343 (fontified t) 343 344 (fontified t) 344 345 (fontified t) 345 346 (fontified t) 346 347 (fontified t) 347 348 (fontified t) 348 349 (fontified t) 349 350 (fontified t) 350 351 (fontified t) 351 352 (fontified t) 352 353 (fontified t) 353 354 (fontified t) 354 355 (fontified t) 355 356 (fontified t) 356 357 (fontified t) 357 358 (fontified t) 358 359 (fontified t) 359 360 (fontified t) 360 361 (fontified t) 361 362 (fontified t) 362 363 (fontified t) 363 365 (fontified t) 365 366 (fontified t) 366 367 (fontified t) 367 376 (fontified t) 376 379 (fontified t face font-lock-type-face) 379 380 (fontified t c-type c-decl-id-start face font-lock-type-face) 380 381 (fontified t) 381 385 (fontified t face font-lock-function-name-face) 385 394 (fontified t) 394 397 (fontified t face font-lock-type-face) 397 398 (fontified t c-type c-decl-id-start face font-lock-type-face) 398 399 (fontified t) 399 405 (fontified t face font-lock-variable-name-face) 405 439 (fontified t) 439 443 (fontified t) 443 444 (fontified t) 444 445 (fontified t) 445 446 (fontified t) 446 447 (fontified t) 447 448 (fontified t) 448 449 (fontified t) 449 450 (fontified t) 450 451 (fontified t) 451 452 (fontified t) 452 453 (fontified t) 453 454 (fontified t) 454 455 (fontified t) 455 456 (fontified t) 456 457 (fontified t) 457 458 (fontified t) 458 459 (fontified t) 459 460 (fontified t) 460 461 (fontified t) 461 462 (fontified t) 462 463 (fontified t) 463 464 (fontified t) 464 465 (fontified t) 465 466 (fontified t face font-lock-type-face) 466 467 (fontified t face font-lock-type-face) 467 468 (fontified t face font-lock-type-face) 468 469 (fontified t face font-lock-type-face) 469 470 (fontified t face font-lock-type-face) 470 471 (fontified t composition (8 1 #1#)) 471 472 (fontified t)) . 45) (undo-tree-id26 . -439) (undo-tree-id27 . -439) (undo-tree-id28 . -438) (undo-tree-id29 . -438) (undo-tree-id30 . -411) (undo-tree-id31 . -411) (undo-tree-id32 . -390) (undo-tree-id33 . -390) (undo-tree-id34 . -376) (undo-tree-id35 . -376) (undo-tree-id36 . -375) (undo-tree-id37 . -375) (undo-tree-id38 . -373) (undo-tree-id39 . -373) (undo-tree-id40 . -367) (undo-tree-id41 . -367) (undo-tree-id42 . -183) (undo-tree-id43 . -183) (undo-tree-id44 . -182) (undo-tree-id45 . -182) (undo-tree-id46 . -152) (undo-tree-id47 . -152) (undo-tree-id48 . -132) (undo-tree-id49 . -132) (undo-tree-id50 . -101) (undo-tree-id51 . -101) (undo-tree-id52 . -80) (undo-tree-id53 . -80) (undo-tree-id54 . -60) (undo-tree-id55 . -60) (undo-tree-id56 . -41) (undo-tree-id57 . -41) (undo-tree-id58 . -225) (undo-tree-id59 . -225) (undo-tree-id60 . -253) (undo-tree-id61 . -253) (undo-tree-id62 . -255) (undo-tree-id63 . -255) (undo-tree-id64 . -256) (undo-tree-id65 . -256) (undo-tree-id66 . -257) (undo-tree-id67 . -257) (undo-tree-id68 . -288) (undo-tree-id69 . -288) (undo-tree-id70 . -322) (undo-tree-id71 . -322) (undo-tree-id72 . -443) (undo-tree-id73 . -202) (undo-tree-id74 . -202) (undo-tree-id75 . -41) (undo-tree-id76 . -202) (undo-tree-id77 . -222) (undo-tree-id78 . -198) (undo-tree-id79 . -198) (undo-tree-id80 . -222) (undo-tree-id81 . -330) (undo-tree-id82 . -338) (undo-tree-id83 . -40) (undo-tree-id84 . -470) (undo-tree-id85 . -40) (undo-tree-id86 . -20) (undo-tree-id87 . -39) (undo-tree-id88 . -40) (undo-tree-id89 . -40) (undo-tree-id90 . -439) (undo-tree-id91 . -465) (undo-tree-id92 . -469) (undo-tree-id93 . -470) 515 (t 23314 9050 584736 645000)) ((45 . 517) (#("typedef char int8;
typedef byte uint8;
typedef short int16;
typedef unsigned short uint16;
typedef long int32;
typedef unsigned long uint32;

void setup() {
    serial_default_mode();
    serial_set_speed(9600);
    Serial.begin(9600);
}


void read_16_bytes(int8* to) {
    for(int i = 0; i < 16; i++) {
        to[i] = serial_read_byte_blocking();
    }
}

void loop() {
    char buffer[16];
    read_16_bytes(buffer);

    serial_write_n_bytes(" 0 1 (c-is-sws t fontified t face font-lock-keyword-face) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 11 (fontified t face font-lock-type-face) 11 12 (fontified t c-type c-decl-type-start face font-lock-type-face) 12 13 (fontified t) 13 17 (fontified t face font-lock-type-face) 17 19 (fontified t) 19 26 (fontified t face font-lock-keyword-face) 26 27 (fontified t) 27 30 (fontified t face font-lock-type-face) 30 31 (fontified t c-type c-decl-type-start face font-lock-type-face) 31 32 (fontified t) 32 37 (fontified t face font-lock-type-face) 37 39 (fontified t) 39 46 (fontified t face font-lock-keyword-face) 46 47 (fontified t) 47 51 (fontified t face font-lock-type-face) 51 52 (fontified t c-type c-decl-type-start face font-lock-type-face) 52 53 (fontified t) 53 58 (fontified t face font-lock-type-face) 58 60 (fontified t) 60 67 (fontified t face font-lock-keyword-face) 67 68 (fontified t) 68 76 (fontified t face font-lock-type-face) 76 77 (fontified t) 77 81 (fontified t face font-lock-type-face) 81 82 (fontified t c-type c-decl-type-start face font-lock-type-face) 82 83 (fontified t) 83 89 (fontified t face font-lock-type-face) 89 91 (fontified t) 91 98 (fontified t face font-lock-keyword-face) 98 99 (fontified t) 99 102 (fontified t face font-lock-type-face) 102 103 (fontified t c-type c-decl-type-start face font-lock-type-face) 103 104 (fontified t) 104 109 (fontified t face font-lock-type-face) 109 111 (fontified t) 111 118 (fontified t face font-lock-keyword-face) 118 119 (fontified t) 119 127 (fontified t face font-lock-type-face) 127 128 (fontified t) 128 131 (fontified t face font-lock-type-face) 131 132 (fontified t c-type c-decl-type-start face font-lock-type-face) 132 133 (fontified t) 133 139 (fontified t face font-lock-type-face) 139 142 (fontified t) 142 145 (fontified t face font-lock-type-face) 145 146 (fontified t c-type c-decl-id-start face font-lock-type-face) 146 147 (fontified t) 147 152 (fontified t face font-lock-function-name-face) 152 216 (fontified t) 216 222 (fontified t face font-lock-keyword-face) 222 240 (fontified t) 240 243 (fontified t face font-lock-type-face) 243 244 (fontified t c-type c-decl-id-start face font-lock-type-face) 244 245 (fontified t) 245 258 (fontified t face font-lock-function-name-face) 258 259 (fontified t c-type c-decl-arg-start) 259 263 (fontified t face font-lock-type-face) 263 264 (fontified t composition (8 1 #1#)) 264 265 (fontified t) 265 267 (fontified t face font-lock-variable-name-face) 267 275 (fontified t) 275 278 (fontified t face font-lock-keyword-face) 278 279 (fontified t) 279 281 (fontified t face font-lock-type-face) 281 282 (fontified t c-type c-decl-id-start face font-lock-type-face) 282 283 (fontified t) 283 284 (fontified t face font-lock-variable-name-face) 284 299 (fontified t) 299 301 (fontified t composition (9 2 #2#)) 301 359 (fontified t) 359 362 (fontified t face font-lock-type-face) 362 363 (fontified t c-type c-decl-id-start face font-lock-type-face) 363 364 (fontified t) 364 368 (fontified t face font-lock-function-name-face) 368 377 (fontified t) 377 380 (fontified t face font-lock-type-face) 380 381 (fontified t c-type c-decl-id-start face font-lock-type-face) 381 382 (fontified t) 382 388 (fontified t face font-lock-variable-name-face) 388 447 (fontified t)) . 45) (undo-tree-id94 . -19) (undo-tree-id95 . -19) (undo-tree-id96 . -39) (undo-tree-id97 . -39) (undo-tree-id98 . -60) (undo-tree-id99 . -60) (undo-tree-id100 . -91) (undo-tree-id101 . -91) (undo-tree-id102 . -111) (undo-tree-id103 . -111) (undo-tree-id104 . -141) (undo-tree-id105 . -141) (undo-tree-id106 . -142) (undo-tree-id107 . -142) (undo-tree-id108 . -157) (undo-tree-id109 . -157) (undo-tree-id110 . -184) (undo-tree-id111 . -184) (undo-tree-id112 . -356) (undo-tree-id113 . -356) (undo-tree-id114 . -358) (undo-tree-id115 . -358) (undo-tree-id116 . -359) (undo-tree-id117 . -359) (undo-tree-id118 . -373) (undo-tree-id119 . -373) (undo-tree-id120 . -394) (undo-tree-id121 . -394) (undo-tree-id122 . -421) (undo-tree-id123 . -421) (undo-tree-id124 . -422) (undo-tree-id125 . -422) (undo-tree-id126 . -305) (undo-tree-id127 . -305) (undo-tree-id128 . -271) (undo-tree-id129 . -271) (undo-tree-id130 . -240) (undo-tree-id131 . -240) (undo-tree-id132 . -239) (undo-tree-id133 . -239) (undo-tree-id134 . -238) (undo-tree-id135 . -238) (undo-tree-id136 . -236) (undo-tree-id137 . -236) (undo-tree-id138 . -212) (undo-tree-id139 . -212) (undo-tree-id140 . -350) (undo-tree-id141 . -350) (undo-tree-id142 . -38) (undo-tree-id143 . -38) (undo-tree-id144 . 409) (undo-tree-id145 . 409) (undo-tree-id146 . -38) (undo-tree-id147 . -38) (t 23314 9087 188541 527000)) (23314 9127 63663 19000) 0 nil]) ((510 . 515)) nil (23314 9127 64973 76000) 0 nil]) ((#("char" 0 1 (fontified t face font-lock-type-face) 1 2 (fontified t face font-lock-type-face) 2 3 (fontified t face font-lock-type-face) 3 4 (fontified t face font-lock-type-face)) . 510) (undo-tree-id25 . -4) 514 (t 23314 9033 851184 299000)) nil (23314 9050 500845 209000) 0 nil]) ((514 . 515)) nil (23314 9033 795652 586000) 0 nil]) ((510 . 514)) nil (23314 9033 795662 178000) 0 nil]) ((509 . 511) (#("(" 0 1 (fontified nil)) . -509) (509 . 510) (t 23314 8781 530893 203000)) nil (23314 9033 795669 224000) 0 nil]) ((84 . 85)) nil (23314 8781 465951 448000) 0 nil]) ((78 . 83)) nil (23314 8781 465960 883000) 0 nil]) ((#("a" 0 1 (fontified t face font-lock-string-face c-in-sws t)) . -78) (undo-tree-id24 . -1) 79) nil (23314 8781 465977 284000) 0 nil]) ((75 . 79) (74 . 76) (#("\"" 0 1 (category c-cpp-delimiter fontified nil)) . -74) (74 . 75) (#("\"" 0 1 (fontified nil category c-cpp-delimiter)) . -74) (66 . 75)) nil (23314 8781 465987 784000) 0 nil]) ((65 . 66) (t 23314 8655 668792 14000)) nil (23314 8781 465993 935000) 0 nil]) ((64 . 65)) nil (23314 8655 606443 135000) 0 nil]) ((55 . 63) (54 . 56) (#("\"" 0 1 (category c-cpp-delimiter fontified nil)) . -54) (54 . 55) (#("\"" 0 1 (fontified nil category c-cpp-delimiter)) . -54) (46 . 55)) nil (23314 8655 606450 85000) 0 nil]) ((#(" " 0 1 (fontified t)) . 46) (undo-tree-id23 . -1) 47) nil (23314 8655 606459 600000) 0 nil]) ((46 . 47)) nil (23314 8655 606461 834000) 0 nil]) ((45 . 46)) nil (23314 8655 606463 461000) 0 nil]) ((44 . 45) (t 23314 8034 532996 863000)) nil (23314 8655 606465 636000) 0 nil]) ((504 . 505)) nil (23314 8034 463360 648000) 0 nil]) ((502 . 504) (#("(" 0 1 (fontified nil)) . -502) (502 . 503)) nil (23314 8034 463366 208000) 0 nil]) ((496 . 502)) nil (23314 8034 463368 903000) 0 nil]) ((#("l" 0 1 (fontified t)) . -496) (undo-tree-id15 . -1) 497) nil (23314 8034 463377 97000) 0 nil]) ((492 . 497)) nil (23314 8034 463379 686000) 0 nil]) ((#("p" 0 1 (fontified t)) . -492) (undo-tree-id16 . -1) (#("r" 0 1 (fontified t)) . -493) (undo-tree-id17 . -1) (#("e" 0 1 (fontified t)) . -494) (undo-tree-id18 . -1) 495) nil (23314 8034 463388 33000) 0 nil]) ((485 . 495)) nil (23314 8034 463391 351000) 0 nil]) ((480 . 485)) nil (23314 8034 463393 327000) 0 nil]) ((475 . 478)) nil (23314 8034 463394 992000) 0 nil]) ((474 . 475)) nil (23314 8034 463396 469000) 0 nil]) ((466 . 467)) nil (23314 8034 463398 261000) 0 nil]) ((447 . 466)) nil (23314 8034 463399 879000) 0 nil]) ((#("println" 0 7 (fontified t)) . -447) (undo-tree-id19 . -7) (undo-tree-id20 . -7) 454) nil (23314 8034 463405 440000) 0 nil]) ((#("." 0 1 (fontified t)) . 447)) nil (23314 8034 463407 911000) 0 nil]) ((#("Serial" 0 6 (fontified t face font-lock-keyword-face)) . -447) (undo-tree-id21 . -6) (undo-tree-id22 . -6) 453 (t 23314 7992 855945 443000)) nil (23314 8034 463413 512000) 0 nil]) ((369 . 370)) nil (23314 7992 763752 381000) 0 nil]) ((367 . 369) (#("(" 0 1 (fontified nil)) . -367) (367 . 368)) nil (23314 7992 763763 827000) 0 nil]) ((359 . 367)) nil (23314 7992 763769 998000) 0 nil]) ((342 . 359)) nil (23314 7992 763773 799000) 0 nil]) ((#("Serial.read();" 0 6 (fontified t face font-lock-keyword-face) 6 14 (fontified t)) . 342) (undo-tree-id0 . -14) (undo-tree-id1 . -14)) nil (23314 7992 763800 544000) 0 nil]) ((#("

        " 0 1 (fontified t) 1 10 (fontified t)) . -334)) nil (23314 7992 763805 782000) 0 nil]) ((#("while(!Serial.available());" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t face font-lock-negation-char-face) 7 13 (fontified t face font-lock-keyword-face) 13 27 (fontified t)) . 334) (undo-tree-id2 . -27) (undo-tree-id3 . -27)) nil (23314 7992 763819 393000) 0 nil]) ((255 . 256)) nil (23314 7992 763824 472000) 0 nil]) ((250 . 254)) nil (23314 7992 763828 180000) 0 nil]) ((249 . 251) (#("(" 0 1 (fontified nil)) . -249) (249 . 250)) nil (23314 7992 763834 80000) 0 nil]) ((233 . 249)) nil (23314 7992 763838 577000) 0 nil]) ((#("void " 0 1 (fontified t face font-lock-type-face) 1 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face) 4 5 (fontified t)) . 206) (undo-tree-id4 . -5) 211) nil (23314 7992 763846 619000) 0 nil]) ((233 . 238)) nil (23314 7992 763851 316000) 0 nil]) ((232 . 233)) nil (23314 7992 763854 988000) 0 nil]) ((218 . 225)) nil (23314 7992 763858 693000) 0 nil]) ((#("set" 0 3 (fontified t face font-lock-function-name-face)) . 218) (undo-tree-id5 . -3) 221) nil (23314 7992 763866 908000) 0 nil]) ((227 . 228) (#(")" 0 1 (fontified nil)) . -227) (227 . 228)) nil (23314 7992 763875 798000) 0 nil]) ((#("data_size_t size, parity_mode_t parity, uint two_stop_bits);" 0 11 (fontified t face font-lock-type-face) 11 12 (fontified t) 12 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t c-type c-decl-arg-start) 17 18 (fontified t) 18 31 (fontified t face font-lock-type-face) 31 32 (fontified t) 32 38 (fontified t face font-lock-variable-name-face) 38 39 (fontified t c-type c-decl-arg-start) 39 40 (fontified t) 40 44 (fontified t face font-lock-type-face) 44 45 (fontified t) 45 58 (fontified t face font-lock-variable-name-face) 58 59 (fontified t) 59 60 (fontified t)) . 227) (undo-tree-id6 . -60) (undo-tree-id7 . -58) (undo-tree-id8 . -58) (undo-tree-id9 . -60) (undo-tree-id10 . -60)) nil (23314 7992 763898 102000) 0 nil]) ((286 . 287)) nil (23314 7992 763903 849000) 0 nil]) ((#(";" 0 1 (fontified t)) . -286) (undo-tree-id11 . -1) 287) nil (23314 7992 763911 747000) 0 nil]) ((206 . 287)) nil (23314 7992 763916 538000) 0 nil]) ((#("Serial.begin(9600);" 0 6 (fontified t face font-lock-keyword-face) 6 19 (fontified t)) . 206) (undo-tree-id12 . -19) (undo-tree-id13 . -19) (undo-tree-id14 . -19) (t 23313 61162 155164 748000)) nil (23314 7992 763929 487000) 0 nil]) nil nil (23314 7992 763933 540000) 0 nil] #3# 3228 61 nil]